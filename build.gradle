import de.undercouch.gradle.tasks.download.Download
import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage
import com.bmuschko.gradle.docker.tasks.image.DockerRemoveImage

buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:3.0.12'
        classpath 'de.undercouch:gradle-download-task:3.3.0'
    }
}

ext {
    allureVersion = '2.5.0'
}

apply plugin: 'com.bmuschko.docker-remote-api'

task wrapper(type: Wrapper) {
    gradleVersion = '4.5'
}

task downloadAllure(type: Download) {
    src "https://dl.bintray.com/qameta/generic/io/qameta/allure/allure/${allureVersion}/allure-${allureVersion}.zip"
    dest "$buildDir/allure.zip"
}

task unzipAllure(dependsOn: downloadAllure, type: Copy) {
    from zipTree(file("$buildDir/allure.zip"))
    into file("${buildDir}")
}

task generateReport(dependsOn: unzipAllure, type:Exec) {
    commandLine "${buildDir}/allure-${allureVersion}/bin/allure", 'generate', '../allure-results'
}

task buildDockerImage(type: DockerBuildImage) {
    inputDir project.projectDir
    tag "allure/${project.name}:${allureVersion}"
}

task pushDockerImage(dependsOn: buildDockerImage, type: DockerPushImage) {
    imageName "allure/${project.name}"
    tag allureVersion
}
